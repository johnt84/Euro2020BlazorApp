@using Models;
@using Models.Enums;

<h2>Squad</h2>

<h3>Players</h3>

@foreach (var playerByPosition in PlayersByPosition)
{
    <h4 class="playerPositionHeader">@GetPositionLabel(playerByPosition.Position)</h4>

    @foreach (var player in GetPlayersOrderedByName(playerByPosition.Players))
    {
        <div class="playersContainer">
            <button class="toggleFixtureAndResultsVisibilityButton" @onclick="() => ShowPlayerProfile(player)">View Profile</button>
            <ul>
                <PlayerTile Player="player"></PlayerTile>
            </ul>
        </div>
    }
}

@if (CoachingStaff != null && CoachingStaff.Count > 0)
{
    <h3 class="playerPositionHeader">Coaching Staff</h3>

    @foreach (var coach in CoachingStaff)
    {
        <h4>@GetCoachingRoleLabel(coach.SquadRole)</h4>

        <div class="playersContainer">
            <button class="toggleFixtureAndResultsVisibilityButton" @onclick="() => ShowPlayerProfile(coach)">View Profile</button>
            <ul>
                <PlayerTile Player="coach"></PlayerTile>
            </ul>
        </div>
    }
}

@if (PlayerProfileVisible)
{
    <PlayerProfile Player="SelectedPlayer"></PlayerProfile>
    <button class="toggleFixtureAndResultsVisibilityButton" @onclick="() => HidePlayerProfile()">Hide Profile</button>
}

@code {
    [Parameter]
    public List<Models.PlayerByPosition> PlayersByPosition { get; set; }

    [Parameter]
    public List<Models.Player> CoachingStaff { get; set; }

    private bool PlayerProfileVisible { get; set; } = false;

    private Player SelectedPlayer { get; set; } = null;

    private string GetPositionLabel(string position) => $"{position}s";

    private string GetCoachingRoleLabel(Enums.SquadRole coachingRole) =>
                                coachingRole.ToString().Replace("_", " ");

    private List<Player> GetPlayersOrderedByName(List<Player> players)
    {
        return players.OrderBy(x => x.Name).ToList();
    }

    private void ShowPlayerProfile(Models.Player player)
    {
        SelectedPlayer = player;
        PlayerProfileVisible = true;
    }

    private void HidePlayerProfile()
    {
        PlayerProfileVisible = false;
    }
}

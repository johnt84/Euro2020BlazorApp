@page "/teams"

@using Euro2020BlazorApp.Models;
@using Euro2020BlazorApp.Data;
@using Euro2020BlazorApp.Components;
@inject IFootballDataService FootballDataService;

<h1 style="padding-bottom: 20px;">Teams</h1>

@if (teams == null && !isInvalidTeams)
{
    <p><em>Loading...</em></p>
}
else if (isInvalidTeams)
{
    <ErrorMessage Error="@ErrorMessage"></ErrorMessage>
}
else if (!teams.Any())
{
    <ErrorMessage Error="No teams could be found"></ErrorMessage>
}
else
{
    <div class="teamsContainer">
        <ul>
            @foreach (var team in teams)
            {
                <TeamTile Team="team"></TeamTile>
            }
        </ul>
    </div>
}

@code {
    private List<Models.Team> teams = null;

    private bool isInvalidTeams = false;

    private string ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            teams = await FootballDataService.GetTeams();
            isInvalidTeams = false;
        }
        catch (Exception ex) when (ex.Message.Contains(Constants.TOO_MANY_REQUESTS_ERROR_CODE.ToString()))
        {
            isInvalidTeams = true;
            ErrorMessage = Constants.TOO_MANY_REQUESTS_ERROR_MESSAGE;
        }
        catch (Exception)
        {
            isInvalidTeams = true;
            ErrorMessage = $"Could not retrieve any teams";
        }
    }
}

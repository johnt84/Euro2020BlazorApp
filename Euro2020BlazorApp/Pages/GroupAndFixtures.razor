@page "/groupsandfixtures"
@page "/groupsandfixtures/{groupname}"

@using Euro2020BlazorApp.Data;
@using Euro2020BlazorApp.Components;
@using Models.Enums;
@inject IFootballDataService FootballDataService;

@if (group == null || fixturesAndResultsByGroup == null)
{
    <p><em>Loading...</em></p>
}
else if (string.IsNullOrEmpty(group.Name) || fixturesAndResultsByGroup.Group == null)
{
    <p><em>No group or fixtures and results could be found</em></p>
}
else
{
    <Group ComponentSource="Enums.ComponentSource.GroupsAndFixtures" GroupModel="fixturesAndResultsByGroup.Group"></Group>

    <FixturesAndResultsByGroup FixturesAndResultsByGroupModel="fixturesAndResultsByGroup"></FixturesAndResultsByGroup>
}

@code {
    [Parameter]
    public string GroupName { get; set; }

    private Models.Group group = null;
    private Models.FixturesAndResultsByGroup fixturesAndResultsByGroup = null;

    protected override async Task OnInitializedAsync()
    {
        group = await FootballDataService.GetGroup(GroupName);
        fixturesAndResultsByGroup = await FootballDataService.GetFixturesAndResultsByGroup(group);
    }
}
